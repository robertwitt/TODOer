openapi: 3.0.0

info:
  title: "TODOer API"
  version: "0.0.1"
  contact:
    name: Robert Witt
    url: https://github.com/robertwitt/TODOer

servers:
  - url: /beta

paths:
  /ping:
    get:
      operationId: ping
      summary: Ping!
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInfo"
  /Tasks/{id}:
    get:
      operationId: getTask
      summary: Get a task by key
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Not Found
  /Tasks:
    get:
      operationId: getTasks
      summary: Get a list of tasks
      parameters:
        - name: collection
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
    post:
      operationId: createTask
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task-create"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

components:
  schemas:
    ServerInfo:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        uptime:
          type: number
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          maxLength: 40
        collection:
          type: object
          properties:
            id:
              type: integer
              format: int64
            title:
              type: string
              maxLength: 40
          required:
            - id
        dueDate:
          type: string
          format: date
        dueTime:
          type: string
          maxLength: 8
        status:
          type: object
          properties:
            code:
              type: string
              maxLength: 1
            name:
              type: string
              maxLength: 40
          required:
            - code
        isUpdatable:
          type: boolean
        isDeletable:
          type: boolean
        priority:
          type: object
          properties:
            code:
              type: integer
              format: int32
            name:
              type: string
              maxLength: 40
          required:
            - code
        isPlannedForMyDay:
          type: boolean
      required:
        - id
        - collection
        - status
        - isUpdatable
        - isDeletable
        - isPlannedForMyDay
    Task-create:
      type: object
      properties:
        title:
          type: string
          maxLength: 40
        collection:
          type: integer
          format: int64
        dueDate:
          type: string
          format: date
        dueTime:
          type: string
          maxLength: 8
        priority:
          type: integer
          format: int32
        isPlannedForMyDay:
          type: boolean
      required:
        - collection
